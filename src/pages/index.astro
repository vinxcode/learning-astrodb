---
// import { like } from "astro:db";
import Layout from "../layouts/Layout.astro";
import { db, User } from "astro:db";

if(Astro.request.method === 'POST'){
	const formData = await Astro.request.formData();
	const userId = formData.get('idUser')
	const name = formData.get('name')
	const phone = formData.get('phone')
	if(typeof userId === 'string' && typeof name === 'string' && typeof phone === 'string'){
		await db.insert(User).values({ userId, name, phone});
	}
}

const users = await db.select().from(User);
// const users = await db.select().from(User).where(like(User.userId, '2'));
---

<Layout title="Welcome to Astro.">
	<main>
		{
			users.map(({ userId, name, phone }) => (
				<article>
					<p>Id: { userId }</p>
					<p>Name: {name}</p>
					<p>Phone: {phone}</p>
				</article>
			))
		}

		<form method="POST" style="display: grid">
			<label for="userId">Id</label>
			<input id="userId" name="IserId" />

			<label for="name">Name</label>
			<input id="name" name="name" />

			<label for="phone">Phone</label>
			<textarea id="phone" name="phone"></textarea>

			<button type="submit">Submit</button>
		</form>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(
			rgba(var(--accent-dark), 66%),
			rgba(var(--accent-dark), 33%)
		);
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
